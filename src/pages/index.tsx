import type { NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";

function isValidHttpUrl(tempUrl: string) {
    let url;

    try {
        url = new URL(tempUrl);
    } catch (_) {
        return false;
    }

    return url.protocol === "http:" || url.protocol === "https:";
}

const UrlForm: React.FC<{ userId: string }> = ({ userId }) => {
    const [url, setUrl] = useState("");
    const [slug, setSlug] = useState("");

    const { mutate: createShortUrl } = trpc.useMutation("url.create");

    return (
        <div>
            <h1>Create a new Short Url</h1>
            <input
                type="text"
                placeholder="URL"
                value={url}
                onChange={(e) => setUrl(e.target.value)}
            />
            <input
                type="text"
                placeholder="Slug"
                value={slug}
                onChange={(e) => setSlug(e.target.value)}
            />
            <button
                onClick={() => {
                    if (!url) return;
                    if (!slug) return;
                    if (!isValidHttpUrl(url)) return;
                    if (slug.includes("/") || slug.includes(" ")) return;

                    createShortUrl({ userId, url, slug });

                    setUrl("");
                    setSlug("");
                }}
            >
                Create!
            </button>
        </div>
    );
};

const HomeContents = () => {
    const { data: session, status } = useSession();

    if (status === "loading") {
        return <div>Loading...</div>;
    }

    if (!session || !session.user?.id) {
        return (
            <div>
                <div>Please log in</div>
                <button onClick={() => signIn("github")}>
                    Sign in with Github
                </button>
            </div>
        );
    }

    return (
        <div>
            <div>Hello {session.user?.name}</div>
            <UrlForm userId={session.user?.id} />
            <button onClick={() => signOut()}>Sign out</button>
        </div>
    );
};
const Home: NextPage = () => {
    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <HomeContents />
        </>
    );
};

export default Home;
